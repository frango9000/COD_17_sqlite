/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.awt.Dimension;
import java.util.TreeMap;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import modelo.BiblioSQL;

/**
 *
 * @author NarF
 */
public class GenerosPanel extends javax.swing.JPanel {

    BiblioSQL biblioSQL;

    /**
     * Creates new form GenerosPanel
     */
    public GenerosPanel() {
    }

    public GenerosPanel(BiblioSQL biblioSQL) {
        this.biblioSQL = biblioSQL;
        initComponents();
        refreshTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jProgressBar1 = new javax.swing.JProgressBar();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableGeneros = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        btnLeerGeneros = new javax.swing.JButton();
        btnAgregar = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnVolver = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Generos");

        jTableGeneros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Genero"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableGeneros.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTableGeneros);
        if (jTableGeneros.getColumnModel().getColumnCount() > 0) {
            jTableGeneros.getColumnModel().getColumn(0).setMinWidth(25);
            jTableGeneros.getColumnModel().getColumn(1).setMinWidth(130);
        }

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnLeerGeneros.setText("Refrescar");
        btnLeerGeneros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLeerGenerosActionPerformed(evt);
            }
        });

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnEdit.setText("Editar");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnVolver.setText("Volver");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        btnDelete.setText("Eliminar");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLeerGeneros, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAgregar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnVolver, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAgregar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnEdit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDelete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                .addComponent(btnLeerGeneros)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnVolver)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 442, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTableGeneros.getSelectedRow();
        if(selectedRow>-1){
            int id = (int)jTableGeneros.getValueAt(selectedRow, 0);
            System.out.println(id);
            JFrame j = new GeneroFrame(id);
            j.setVisible(true);
        }else JOptionPane.showMessageDialog(this, "Elige un genero a editar", "Generos", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnLeerGenerosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLeerGenerosActionPerformed
        refreshTable();
    }//GEN-LAST:event_btnLeerGenerosActionPerformed

    private void refreshTable() {
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jTableGeneros.getModel();
        model.setRowCount(0);
        biblioSQL.queryGeneros().forEach((in, st) -> {
            Object[] row = {in, st};
            model.addRow(row);
        });
    }

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        // TODO add your handling code here:
        MainFrame.setCard(MainFrame.MAINMENUPANEL);
    }//GEN-LAST:event_btnVolverActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:
        JFrame j = new GeneroFrame(null);
        j.setVisible(true);
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        if(jTableGeneros.getSelectedRow() > -1){
            int idGeneroSelected = (int)jTableGeneros.getValueAt(jTableGeneros.getSelectedRow(), 0);
            String generoSelected = biblioSQL.getGeneros().get(idGeneroSelected);
            int i = JOptionPane.showConfirmDialog(this, "Deseas eliminar el genero: " + generoSelected, "Eliminando Genero", JOptionPane.YES_NO_OPTION);
            if(i == 0){
                if(biblioSQL.deleteGenero(idGeneroSelected) > 0){
                    JOptionPane.showMessageDialog(this, "Genero eliminado: " + generoSelected, "Genero Eliminado", JOptionPane.INFORMATION_MESSAGE);
                }else{
                    JOptionPane.showMessageDialog(this, "Genero NO eliminado: " + generoSelected, "Genero Eliminado", JOptionPane.ERROR_MESSAGE);
                }
            }
        }else JOptionPane.showMessageDialog(this, "Elige un genero a eliminar", "Generos", JOptionPane.ERROR_MESSAGE);
        refreshTable();
    }//GEN-LAST:event_btnDeleteActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnLeerGeneros;
    private javax.swing.JButton btnVolver;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableGeneros;
    // End of variables declaration//GEN-END:variables

    class GeneroFrame extends JFrame {

        private GeneroPanel panel;

        public GeneroFrame(Integer id) {
            setMinimumSize(new Dimension(350, 275));

            setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
            setTitle("Genero");

            panel = new GeneroPanel();
            
            if (id != null) {
                panel.getjTextFieldID().setText(id + "");
                panel.getjTextFieldGenero().setText(biblioSQL.getGeneros().get(id));
            }

            panel.getjBtnCancel().addActionListener(e -> this.dispose());
            panel.getjBtnAccept().addActionListener(e -> {
                if (panel.getjTextFieldID().getText().length() == 0) {
                    if (panel.getjTextFieldGenero().getText().trim().length() > 0) {
                        if (biblioSQL.insertGenero(panel.getjTextFieldGenero().getText().trim()) > 0) {
                            JOptionPane.showMessageDialog(this, "Insercion realizada", "Genero", JOptionPane.INFORMATION_MESSAGE);
                        } else {
                            JOptionPane.showMessageDialog(this, "Insercion rechazada", "Genero", JOptionPane.INFORMATION_MESSAGE);
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Nombre de genero invalido", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }else{
                    if (panel.getjTextFieldGenero().getText().trim().length() > 0) {
                        if (biblioSQL.updateGenero(Integer.parseInt(panel.getjTextFieldID().getText()),panel.getjTextFieldGenero().getText().trim()) > 0) {
                            JOptionPane.showMessageDialog(this, "Modificacion realizada", "Genero", JOptionPane.INFORMATION_MESSAGE);
                        } else {
                            JOptionPane.showMessageDialog(this, "Modificacion rechazada", "Genero", JOptionPane.INFORMATION_MESSAGE);
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Nombre de genero invalido", "Error", JOptionPane.ERROR_MESSAGE);
                    }                    
                }
                this.dispose();
                refreshTable();
            });
            setContentPane(panel);

            pack();
            this.setLocationRelativeTo(null);
        }

    }

}
